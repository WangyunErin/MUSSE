// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: musse.proto

#ifndef PROTOBUF_musse_2eproto__INCLUDED
#define PROTOBUF_musse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_musse_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsDownloadRootMessageImpl();
void InitDefaultsDownloadRootMessage();
void InitDefaultsDownloadRootResponseImpl();
void InitDefaultsDownloadRootResponse();
void InitDefaultsUploadRootMessageImpl();
void InitDefaultsUploadRootMessage();
void InitDefaultsDownloadStashMessageImpl();
void InitDefaultsDownloadStashMessage();
void InitDefaultsDownloadStashResponseImpl();
void InitDefaultsDownloadStashResponse();
void InitDefaultsUploadStashMessageImpl();
void InitDefaultsUploadStashMessage();
void InitDefaultsSetupMessageImpl();
void InitDefaultsSetupMessage();
void InitDefaultsCreateOMAPMessageImpl();
void InitDefaultsCreateOMAPMessage();
void InitDefaultsReadStoreRequestImpl();
void InitDefaultsReadStoreRequest();
void InitDefaultsWriteStoreRequestImpl();
void InitDefaultsWriteStoreRequest();
void InitDefaultsUpdateMessageImpl();
void InitDefaultsUpdateMessage();
void InitDefaultsSearchMessageImpl();
void InitDefaultsSearchMessage();
void InitDefaultsSearchResponseImpl();
void InitDefaultsSearchResponse();
void InitDefaultsSearchMessage1Impl();
void InitDefaultsSearchMessage1();
void InitDefaultsSearchResponse1Impl();
void InitDefaultsSearchResponse1();
void InitDefaultsBatchUpdateMessageImpl();
void InitDefaultsBatchUpdateMessage();
inline void InitDefaults() {
  InitDefaultsDownloadRootMessage();
  InitDefaultsDownloadRootResponse();
  InitDefaultsUploadRootMessage();
  InitDefaultsDownloadStashMessage();
  InitDefaultsDownloadStashResponse();
  InitDefaultsUploadStashMessage();
  InitDefaultsSetupMessage();
  InitDefaultsCreateOMAPMessage();
  InitDefaultsReadStoreRequest();
  InitDefaultsWriteStoreRequest();
  InitDefaultsUpdateMessage();
  InitDefaultsSearchMessage();
  InitDefaultsSearchResponse();
  InitDefaultsSearchMessage1();
  InitDefaultsSearchResponse1();
  InitDefaultsBatchUpdateMessage();
}
}  // namespace protobuf_musse_2eproto
class BatchUpdateMessage;
class BatchUpdateMessageDefaultTypeInternal;
extern BatchUpdateMessageDefaultTypeInternal _BatchUpdateMessage_default_instance_;
class CreateOMAPMessage;
class CreateOMAPMessageDefaultTypeInternal;
extern CreateOMAPMessageDefaultTypeInternal _CreateOMAPMessage_default_instance_;
class DownloadRootMessage;
class DownloadRootMessageDefaultTypeInternal;
extern DownloadRootMessageDefaultTypeInternal _DownloadRootMessage_default_instance_;
class DownloadRootResponse;
class DownloadRootResponseDefaultTypeInternal;
extern DownloadRootResponseDefaultTypeInternal _DownloadRootResponse_default_instance_;
class DownloadStashMessage;
class DownloadStashMessageDefaultTypeInternal;
extern DownloadStashMessageDefaultTypeInternal _DownloadStashMessage_default_instance_;
class DownloadStashResponse;
class DownloadStashResponseDefaultTypeInternal;
extern DownloadStashResponseDefaultTypeInternal _DownloadStashResponse_default_instance_;
class ReadStoreRequest;
class ReadStoreRequestDefaultTypeInternal;
extern ReadStoreRequestDefaultTypeInternal _ReadStoreRequest_default_instance_;
class SearchMessage;
class SearchMessageDefaultTypeInternal;
extern SearchMessageDefaultTypeInternal _SearchMessage_default_instance_;
class SearchMessage1;
class SearchMessage1DefaultTypeInternal;
extern SearchMessage1DefaultTypeInternal _SearchMessage1_default_instance_;
class SearchResponse;
class SearchResponseDefaultTypeInternal;
extern SearchResponseDefaultTypeInternal _SearchResponse_default_instance_;
class SearchResponse1;
class SearchResponse1DefaultTypeInternal;
extern SearchResponse1DefaultTypeInternal _SearchResponse1_default_instance_;
class SetupMessage;
class SetupMessageDefaultTypeInternal;
extern SetupMessageDefaultTypeInternal _SetupMessage_default_instance_;
class UpdateMessage;
class UpdateMessageDefaultTypeInternal;
extern UpdateMessageDefaultTypeInternal _UpdateMessage_default_instance_;
class UploadRootMessage;
class UploadRootMessageDefaultTypeInternal;
extern UploadRootMessageDefaultTypeInternal _UploadRootMessage_default_instance_;
class UploadStashMessage;
class UploadStashMessageDefaultTypeInternal;
extern UploadStashMessageDefaultTypeInternal _UploadStashMessage_default_instance_;
class WriteStoreRequest;
class WriteStoreRequestDefaultTypeInternal;
extern WriteStoreRequestDefaultTypeInternal _WriteStoreRequest_default_instance_;

// ===================================================================

class DownloadRootMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DownloadRootMessage) */ {
 public:
  DownloadRootMessage();
  virtual ~DownloadRootMessage();

  DownloadRootMessage(const DownloadRootMessage& from);

  inline DownloadRootMessage& operator=(const DownloadRootMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DownloadRootMessage(DownloadRootMessage&& from) noexcept
    : DownloadRootMessage() {
    *this = ::std::move(from);
  }

  inline DownloadRootMessage& operator=(DownloadRootMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DownloadRootMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DownloadRootMessage* internal_default_instance() {
    return reinterpret_cast<const DownloadRootMessage*>(
               &_DownloadRootMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DownloadRootMessage* other);
  friend void swap(DownloadRootMessage& a, DownloadRootMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DownloadRootMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadRootMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DownloadRootMessage& from);
  void MergeFrom(const DownloadRootMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DownloadRootMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DownloadRootMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsDownloadRootMessageImpl();
};
// -------------------------------------------------------------------

class DownloadRootResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DownloadRootResponse) */ {
 public:
  DownloadRootResponse();
  virtual ~DownloadRootResponse();

  DownloadRootResponse(const DownloadRootResponse& from);

  inline DownloadRootResponse& operator=(const DownloadRootResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DownloadRootResponse(DownloadRootResponse&& from) noexcept
    : DownloadRootResponse() {
    *this = ::std::move(from);
  }

  inline DownloadRootResponse& operator=(DownloadRootResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DownloadRootResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DownloadRootResponse* internal_default_instance() {
    return reinterpret_cast<const DownloadRootResponse*>(
               &_DownloadRootResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DownloadRootResponse* other);
  friend void swap(DownloadRootResponse& a, DownloadRootResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DownloadRootResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadRootResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DownloadRootResponse& from);
  void MergeFrom(const DownloadRootResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DownloadRootResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 pos = 1;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DownloadRootResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 pos_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsDownloadRootResponseImpl();
};
// -------------------------------------------------------------------

class UploadRootMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UploadRootMessage) */ {
 public:
  UploadRootMessage();
  virtual ~UploadRootMessage();

  UploadRootMessage(const UploadRootMessage& from);

  inline UploadRootMessage& operator=(const UploadRootMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadRootMessage(UploadRootMessage&& from) noexcept
    : UploadRootMessage() {
    *this = ::std::move(from);
  }

  inline UploadRootMessage& operator=(UploadRootMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadRootMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UploadRootMessage* internal_default_instance() {
    return reinterpret_cast<const UploadRootMessage*>(
               &_UploadRootMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(UploadRootMessage* other);
  friend void swap(UploadRootMessage& a, UploadRootMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadRootMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadRootMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UploadRootMessage& from);
  void MergeFrom(const UploadRootMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadRootMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // int32 pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos() const;
  void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UploadRootMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 pos_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsUploadRootMessageImpl();
};
// -------------------------------------------------------------------

class DownloadStashMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DownloadStashMessage) */ {
 public:
  DownloadStashMessage();
  virtual ~DownloadStashMessage();

  DownloadStashMessage(const DownloadStashMessage& from);

  inline DownloadStashMessage& operator=(const DownloadStashMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DownloadStashMessage(DownloadStashMessage&& from) noexcept
    : DownloadStashMessage() {
    *this = ::std::move(from);
  }

  inline DownloadStashMessage& operator=(DownloadStashMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DownloadStashMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DownloadStashMessage* internal_default_instance() {
    return reinterpret_cast<const DownloadStashMessage*>(
               &_DownloadStashMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DownloadStashMessage* other);
  friend void swap(DownloadStashMessage& a, DownloadStashMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DownloadStashMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadStashMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DownloadStashMessage& from);
  void MergeFrom(const DownloadStashMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DownloadStashMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DownloadStashMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsDownloadStashMessageImpl();
};
// -------------------------------------------------------------------

class DownloadStashResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DownloadStashResponse) */ {
 public:
  DownloadStashResponse();
  virtual ~DownloadStashResponse();

  DownloadStashResponse(const DownloadStashResponse& from);

  inline DownloadStashResponse& operator=(const DownloadStashResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DownloadStashResponse(DownloadStashResponse&& from) noexcept
    : DownloadStashResponse() {
    *this = ::std::move(from);
  }

  inline DownloadStashResponse& operator=(DownloadStashResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DownloadStashResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DownloadStashResponse* internal_default_instance() {
    return reinterpret_cast<const DownloadStashResponse*>(
               &_DownloadStashResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(DownloadStashResponse* other);
  friend void swap(DownloadStashResponse& a, DownloadStashResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DownloadStashResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadStashResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DownloadStashResponse& from);
  void MergeFrom(const DownloadStashResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DownloadStashResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 pos = 1;
  int pos_size() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::int32 pos(int index) const;
  void set_pos(int index, ::google::protobuf::int32 value);
  void add_pos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pos();

  // repeated bytes value = 2;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_value(int index, ::std::string&& value);
  #endif
  void set_value(int index, const char* value);
  void set_value(int index, const void* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  #if LANG_CXX11
  void add_value(::std::string&& value);
  #endif
  void add_value(const char* value);
  void add_value(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // @@protoc_insertion_point(class_scope:DownloadStashResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pos_;
  mutable int _pos_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsDownloadStashResponseImpl();
};
// -------------------------------------------------------------------

class UploadStashMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UploadStashMessage) */ {
 public:
  UploadStashMessage();
  virtual ~UploadStashMessage();

  UploadStashMessage(const UploadStashMessage& from);

  inline UploadStashMessage& operator=(const UploadStashMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadStashMessage(UploadStashMessage&& from) noexcept
    : UploadStashMessage() {
    *this = ::std::move(from);
  }

  inline UploadStashMessage& operator=(UploadStashMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadStashMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UploadStashMessage* internal_default_instance() {
    return reinterpret_cast<const UploadStashMessage*>(
               &_UploadStashMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(UploadStashMessage* other);
  friend void swap(UploadStashMessage& a, UploadStashMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadStashMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadStashMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UploadStashMessage& from);
  void MergeFrom(const UploadStashMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadStashMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 pos = 2;
  int pos_size() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  ::google::protobuf::int32 pos(int index) const;
  void set_pos(int index, ::google::protobuf::int32 value);
  void add_pos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pos();

  // repeated bytes value = 3;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_value(int index, ::std::string&& value);
  #endif
  void set_value(int index, const char* value);
  void set_value(int index, const void* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  #if LANG_CXX11
  void add_value(::std::string&& value);
  #endif
  void add_value(const char* value);
  void add_value(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // int32 userID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UploadStashMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pos_;
  mutable int _pos_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsUploadStashMessageImpl();
};
// -------------------------------------------------------------------

class SetupMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetupMessage) */ {
 public:
  SetupMessage();
  virtual ~SetupMessage();

  SetupMessage(const SetupMessage& from);

  inline SetupMessage& operator=(const SetupMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetupMessage(SetupMessage&& from) noexcept
    : SetupMessage() {
    *this = ::std::move(from);
  }

  inline SetupMessage& operator=(SetupMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetupMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupMessage* internal_default_instance() {
    return reinterpret_cast<const SetupMessage*>(
               &_SetupMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SetupMessage* other);
  friend void swap(SetupMessage& a, SetupMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetupMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SetupMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetupMessage& from);
  void MergeFrom(const SetupMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetupMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 maxQueueSize = 1;
  void clear_maxqueuesize();
  static const int kMaxQueueSizeFieldNumber = 1;
  ::google::protobuf::int32 maxqueuesize() const;
  void set_maxqueuesize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetupMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 maxqueuesize_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsSetupMessageImpl();
};
// -------------------------------------------------------------------

class CreateOMAPMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateOMAPMessage) */ {
 public:
  CreateOMAPMessage();
  virtual ~CreateOMAPMessage();

  CreateOMAPMessage(const CreateOMAPMessage& from);

  inline CreateOMAPMessage& operator=(const CreateOMAPMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateOMAPMessage(CreateOMAPMessage&& from) noexcept
    : CreateOMAPMessage() {
    *this = ::std::move(from);
  }

  inline CreateOMAPMessage& operator=(CreateOMAPMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateOMAPMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateOMAPMessage* internal_default_instance() {
    return reinterpret_cast<const CreateOMAPMessage*>(
               &_CreateOMAPMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CreateOMAPMessage* other);
  friend void swap(CreateOMAPMessage& a, CreateOMAPMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateOMAPMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateOMAPMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateOMAPMessage& from);
  void MergeFrom(const CreateOMAPMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateOMAPMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 num = 1;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // int32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreateOMAPMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 num_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsCreateOMAPMessageImpl();
};
// -------------------------------------------------------------------

class ReadStoreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReadStoreRequest) */ {
 public:
  ReadStoreRequest();
  virtual ~ReadStoreRequest();

  ReadStoreRequest(const ReadStoreRequest& from);

  inline ReadStoreRequest& operator=(const ReadStoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadStoreRequest(ReadStoreRequest&& from) noexcept
    : ReadStoreRequest() {
    *this = ::std::move(from);
  }

  inline ReadStoreRequest& operator=(ReadStoreRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadStoreRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadStoreRequest* internal_default_instance() {
    return reinterpret_cast<const ReadStoreRequest*>(
               &_ReadStoreRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ReadStoreRequest* other);
  friend void swap(ReadStoreRequest& a, ReadStoreRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadStoreRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadStoreRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadStoreRequest& from);
  void MergeFrom(const ReadStoreRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadStoreRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 poses = 1;
  int poses_size() const;
  void clear_poses();
  static const int kPosesFieldNumber = 1;
  ::google::protobuf::int32 poses(int index) const;
  void set_poses(int index, ::google::protobuf::int32 value);
  void add_poses(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      poses() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_poses();

  // int32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ReadStoreRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > poses_;
  mutable int _poses_cached_byte_size_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsReadStoreRequestImpl();
};
// -------------------------------------------------------------------

class WriteStoreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:WriteStoreRequest) */ {
 public:
  WriteStoreRequest();
  virtual ~WriteStoreRequest();

  WriteStoreRequest(const WriteStoreRequest& from);

  inline WriteStoreRequest& operator=(const WriteStoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteStoreRequest(WriteStoreRequest&& from) noexcept
    : WriteStoreRequest() {
    *this = ::std::move(from);
  }

  inline WriteStoreRequest& operator=(WriteStoreRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteStoreRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteStoreRequest* internal_default_instance() {
    return reinterpret_cast<const WriteStoreRequest*>(
               &_WriteStoreRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(WriteStoreRequest* other);
  friend void swap(WriteStoreRequest& a, WriteStoreRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteStoreRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  WriteStoreRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WriteStoreRequest& from);
  void MergeFrom(const WriteStoreRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WriteStoreRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 pos = 1;
  int pos_size() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::int32 pos(int index) const;
  void set_pos(int index, ::google::protobuf::int32 value);
  void add_pos(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pos() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pos();

  // repeated bytes value = 3;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_value(int index, ::std::string&& value);
  #endif
  void set_value(int index, const char* value);
  void set_value(int index, const void* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  #if LANG_CXX11
  void add_value(::std::string&& value);
  #endif
  void add_value(const char* value);
  void add_value(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // repeated int32 size = 4;
  int size_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 4;
  ::google::protobuf::int32 size(int index) const;
  void set_size(int index, ::google::protobuf::int32 value);
  void add_size(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      size() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_size();

  // int32 userID = 2;
  void clear_userid();
  static const int kUserIDFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:WriteStoreRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pos_;
  mutable int _pos_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > size_;
  mutable int _size_cached_byte_size_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsWriteStoreRequestImpl();
};
// -------------------------------------------------------------------

class UpdateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateMessage) */ {
 public:
  UpdateMessage();
  virtual ~UpdateMessage();

  UpdateMessage(const UpdateMessage& from);

  inline UpdateMessage& operator=(const UpdateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateMessage(UpdateMessage&& from) noexcept
    : UpdateMessage() {
    *this = ::std::move(from);
  }

  inline UpdateMessage& operator=(UpdateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateMessage* internal_default_instance() {
    return reinterpret_cast<const UpdateMessage*>(
               &_UpdateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(UpdateMessage* other);
  friend void swap(UpdateMessage& a, UpdateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateMessage& from);
  void MergeFrom(const UpdateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const void* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:UpdateMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsUpdateMessageImpl();
};
// -------------------------------------------------------------------

class SearchMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchMessage) */ {
 public:
  SearchMessage();
  virtual ~SearchMessage();

  SearchMessage(const SearchMessage& from);

  inline SearchMessage& operator=(const SearchMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchMessage(SearchMessage&& from) noexcept
    : SearchMessage() {
    *this = ::std::move(from);
  }

  inline SearchMessage& operator=(SearchMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchMessage* internal_default_instance() {
    return reinterpret_cast<const SearchMessage*>(
               &_SearchMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SearchMessage* other);
  friend void swap(SearchMessage& a, SearchMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchMessage& from);
  void MergeFrom(const SearchMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes address = 1;
  int address_size() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address(int index) const;
  ::std::string* mutable_address(int index);
  void set_address(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_address(int index, ::std::string&& value);
  #endif
  void set_address(int index, const char* value);
  void set_address(int index, const void* value, size_t size);
  ::std::string* add_address();
  void add_address(const ::std::string& value);
  #if LANG_CXX11
  void add_address(::std::string&& value);
  #endif
  void add_address(const char* value);
  void add_address(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& address() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_address();

  // @@protoc_insertion_point(class_scope:SearchMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> address_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsSearchMessageImpl();
};
// -------------------------------------------------------------------

class SearchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchResponse) */ {
 public:
  SearchResponse();
  virtual ~SearchResponse();

  SearchResponse(const SearchResponse& from);

  inline SearchResponse& operator=(const SearchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchResponse(SearchResponse&& from) noexcept
    : SearchResponse() {
    *this = ::std::move(from);
  }

  inline SearchResponse& operator=(SearchResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchResponse* internal_default_instance() {
    return reinterpret_cast<const SearchResponse*>(
               &_SearchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SearchResponse* other);
  friend void swap(SearchResponse& a, SearchResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResponse& from);
  void MergeFrom(const SearchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes ciphertext = 1;
  int ciphertext_size() const;
  void clear_ciphertext();
  static const int kCiphertextFieldNumber = 1;
  const ::std::string& ciphertext(int index) const;
  ::std::string* mutable_ciphertext(int index);
  void set_ciphertext(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_ciphertext(int index, ::std::string&& value);
  #endif
  void set_ciphertext(int index, const char* value);
  void set_ciphertext(int index, const void* value, size_t size);
  ::std::string* add_ciphertext();
  void add_ciphertext(const ::std::string& value);
  #if LANG_CXX11
  void add_ciphertext(::std::string&& value);
  #endif
  void add_ciphertext(const char* value);
  void add_ciphertext(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ciphertext() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ciphertext();

  // repeated int32 cipherSize = 2;
  int ciphersize_size() const;
  void clear_ciphersize();
  static const int kCipherSizeFieldNumber = 2;
  ::google::protobuf::int32 ciphersize(int index) const;
  void set_ciphersize(int index, ::google::protobuf::int32 value);
  void add_ciphersize(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ciphersize() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ciphersize();

  // repeated int32 cipherPositions = 3;
  int cipherpositions_size() const;
  void clear_cipherpositions();
  static const int kCipherPositionsFieldNumber = 3;
  ::google::protobuf::int32 cipherpositions(int index) const;
  void set_cipherpositions(int index, ::google::protobuf::int32 value);
  void add_cipherpositions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cipherpositions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cipherpositions();

  // @@protoc_insertion_point(class_scope:SearchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ciphertext_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ciphersize_;
  mutable int _ciphersize_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cipherpositions_;
  mutable int _cipherpositions_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsSearchResponseImpl();
};
// -------------------------------------------------------------------

class SearchMessage1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchMessage1) */ {
 public:
  SearchMessage1();
  virtual ~SearchMessage1();

  SearchMessage1(const SearchMessage1& from);

  inline SearchMessage1& operator=(const SearchMessage1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchMessage1(SearchMessage1&& from) noexcept
    : SearchMessage1() {
    *this = ::std::move(from);
  }

  inline SearchMessage1& operator=(SearchMessage1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchMessage1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchMessage1* internal_default_instance() {
    return reinterpret_cast<const SearchMessage1*>(
               &_SearchMessage1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SearchMessage1* other);
  friend void swap(SearchMessage1& a, SearchMessage1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchMessage1* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchMessage1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchMessage1& from);
  void MergeFrom(const SearchMessage1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchMessage1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes address = 1;
  int address_size() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address(int index) const;
  ::std::string* mutable_address(int index);
  void set_address(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_address(int index, ::std::string&& value);
  #endif
  void set_address(int index, const char* value);
  void set_address(int index, const void* value, size_t size);
  ::std::string* add_address();
  void add_address(const ::std::string& value);
  #if LANG_CXX11
  void add_address(::std::string&& value);
  #endif
  void add_address(const char* value);
  void add_address(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& address() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_address();

  // @@protoc_insertion_point(class_scope:SearchMessage1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> address_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsSearchMessage1Impl();
};
// -------------------------------------------------------------------

class SearchResponse1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchResponse1) */ {
 public:
  SearchResponse1();
  virtual ~SearchResponse1();

  SearchResponse1(const SearchResponse1& from);

  inline SearchResponse1& operator=(const SearchResponse1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchResponse1(SearchResponse1&& from) noexcept
    : SearchResponse1() {
    *this = ::std::move(from);
  }

  inline SearchResponse1& operator=(SearchResponse1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResponse1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchResponse1* internal_default_instance() {
    return reinterpret_cast<const SearchResponse1*>(
               &_SearchResponse1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SearchResponse1* other);
  friend void swap(SearchResponse1& a, SearchResponse1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchResponse1* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResponse1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResponse1& from);
  void MergeFrom(const SearchResponse1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResponse1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes ciphertext = 1;
  int ciphertext_size() const;
  void clear_ciphertext();
  static const int kCiphertextFieldNumber = 1;
  const ::std::string& ciphertext(int index) const;
  ::std::string* mutable_ciphertext(int index);
  void set_ciphertext(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_ciphertext(int index, ::std::string&& value);
  #endif
  void set_ciphertext(int index, const char* value);
  void set_ciphertext(int index, const void* value, size_t size);
  ::std::string* add_ciphertext();
  void add_ciphertext(const ::std::string& value);
  #if LANG_CXX11
  void add_ciphertext(::std::string&& value);
  #endif
  void add_ciphertext(const char* value);
  void add_ciphertext(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ciphertext() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ciphertext();

  // repeated int32 cipherPositions = 2;
  int cipherpositions_size() const;
  void clear_cipherpositions();
  static const int kCipherPositionsFieldNumber = 2;
  ::google::protobuf::int32 cipherpositions(int index) const;
  void set_cipherpositions(int index, ::google::protobuf::int32 value);
  void add_cipherpositions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cipherpositions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cipherpositions();

  // @@protoc_insertion_point(class_scope:SearchResponse1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ciphertext_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cipherpositions_;
  mutable int _cipherpositions_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsSearchResponse1Impl();
};
// -------------------------------------------------------------------

class BatchUpdateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BatchUpdateMessage) */ {
 public:
  BatchUpdateMessage();
  virtual ~BatchUpdateMessage();

  BatchUpdateMessage(const BatchUpdateMessage& from);

  inline BatchUpdateMessage& operator=(const BatchUpdateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchUpdateMessage(BatchUpdateMessage&& from) noexcept
    : BatchUpdateMessage() {
    *this = ::std::move(from);
  }

  inline BatchUpdateMessage& operator=(BatchUpdateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchUpdateMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchUpdateMessage* internal_default_instance() {
    return reinterpret_cast<const BatchUpdateMessage*>(
               &_BatchUpdateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(BatchUpdateMessage* other);
  friend void swap(BatchUpdateMessage& a, BatchUpdateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchUpdateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchUpdateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchUpdateMessage& from);
  void MergeFrom(const BatchUpdateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchUpdateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes address = 1;
  int address_size() const;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address(int index) const;
  ::std::string* mutable_address(int index);
  void set_address(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_address(int index, ::std::string&& value);
  #endif
  void set_address(int index, const char* value);
  void set_address(int index, const void* value, size_t size);
  ::std::string* add_address();
  void add_address(const ::std::string& value);
  #if LANG_CXX11
  void add_address(::std::string&& value);
  #endif
  void add_address(const char* value);
  void add_address(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& address() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_address();

  // repeated bytes value = 2;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_value(int index, ::std::string&& value);
  #endif
  void set_value(int index, const char* value);
  void set_value(int index, const void* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  #if LANG_CXX11
  void add_value(::std::string&& value);
  #endif
  void add_value(const char* value);
  void add_value(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // @@protoc_insertion_point(class_scope:BatchUpdateMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> address_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  mutable int _cached_size_;
  friend struct ::protobuf_musse_2eproto::TableStruct;
  friend void ::protobuf_musse_2eproto::InitDefaultsBatchUpdateMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DownloadRootMessage

// int32 userID = 1;
inline void DownloadRootMessage::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 DownloadRootMessage::userid() const {
  // @@protoc_insertion_point(field_get:DownloadRootMessage.userID)
  return userid_;
}
inline void DownloadRootMessage::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:DownloadRootMessage.userID)
}

// -------------------------------------------------------------------

// DownloadRootResponse

// int32 pos = 1;
inline void DownloadRootResponse::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 DownloadRootResponse::pos() const {
  // @@protoc_insertion_point(field_get:DownloadRootResponse.pos)
  return pos_;
}
inline void DownloadRootResponse::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:DownloadRootResponse.pos)
}

// bytes value = 2;
inline void DownloadRootResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DownloadRootResponse::value() const {
  // @@protoc_insertion_point(field_get:DownloadRootResponse.value)
  return value_.GetNoArena();
}
inline void DownloadRootResponse::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DownloadRootResponse.value)
}
#if LANG_CXX11
inline void DownloadRootResponse::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DownloadRootResponse.value)
}
#endif
inline void DownloadRootResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DownloadRootResponse.value)
}
inline void DownloadRootResponse::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DownloadRootResponse.value)
}
inline ::std::string* DownloadRootResponse::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:DownloadRootResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadRootResponse::release_value() {
  // @@protoc_insertion_point(field_release:DownloadRootResponse.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadRootResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:DownloadRootResponse.value)
}

// -------------------------------------------------------------------

// UploadRootMessage

// int32 userID = 1;
inline void UploadRootMessage::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 UploadRootMessage::userid() const {
  // @@protoc_insertion_point(field_get:UploadRootMessage.userID)
  return userid_;
}
inline void UploadRootMessage::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:UploadRootMessage.userID)
}

// int32 pos = 2;
inline void UploadRootMessage::clear_pos() {
  pos_ = 0;
}
inline ::google::protobuf::int32 UploadRootMessage::pos() const {
  // @@protoc_insertion_point(field_get:UploadRootMessage.pos)
  return pos_;
}
inline void UploadRootMessage::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:UploadRootMessage.pos)
}

// bytes value = 3;
inline void UploadRootMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UploadRootMessage::value() const {
  // @@protoc_insertion_point(field_get:UploadRootMessage.value)
  return value_.GetNoArena();
}
inline void UploadRootMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UploadRootMessage.value)
}
#if LANG_CXX11
inline void UploadRootMessage::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UploadRootMessage.value)
}
#endif
inline void UploadRootMessage::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UploadRootMessage.value)
}
inline void UploadRootMessage::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UploadRootMessage.value)
}
inline ::std::string* UploadRootMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:UploadRootMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadRootMessage::release_value() {
  // @@protoc_insertion_point(field_release:UploadRootMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadRootMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:UploadRootMessage.value)
}

// -------------------------------------------------------------------

// DownloadStashMessage

// int32 userID = 1;
inline void DownloadStashMessage::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 DownloadStashMessage::userid() const {
  // @@protoc_insertion_point(field_get:DownloadStashMessage.userID)
  return userid_;
}
inline void DownloadStashMessage::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:DownloadStashMessage.userID)
}

// -------------------------------------------------------------------

// DownloadStashResponse

// repeated int32 pos = 1;
inline int DownloadStashResponse::pos_size() const {
  return pos_.size();
}
inline void DownloadStashResponse::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::int32 DownloadStashResponse::pos(int index) const {
  // @@protoc_insertion_point(field_get:DownloadStashResponse.pos)
  return pos_.Get(index);
}
inline void DownloadStashResponse::set_pos(int index, ::google::protobuf::int32 value) {
  pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:DownloadStashResponse.pos)
}
inline void DownloadStashResponse::add_pos(::google::protobuf::int32 value) {
  pos_.Add(value);
  // @@protoc_insertion_point(field_add:DownloadStashResponse.pos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DownloadStashResponse::pos() const {
  // @@protoc_insertion_point(field_list:DownloadStashResponse.pos)
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DownloadStashResponse::mutable_pos() {
  // @@protoc_insertion_point(field_mutable_list:DownloadStashResponse.pos)
  return &pos_;
}

// repeated bytes value = 2;
inline int DownloadStashResponse::value_size() const {
  return value_.size();
}
inline void DownloadStashResponse::clear_value() {
  value_.Clear();
}
inline const ::std::string& DownloadStashResponse::value(int index) const {
  // @@protoc_insertion_point(field_get:DownloadStashResponse.value)
  return value_.Get(index);
}
inline ::std::string* DownloadStashResponse::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:DownloadStashResponse.value)
  return value_.Mutable(index);
}
inline void DownloadStashResponse::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:DownloadStashResponse.value)
  value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DownloadStashResponse::set_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:DownloadStashResponse.value)
  value_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DownloadStashResponse::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:DownloadStashResponse.value)
}
inline void DownloadStashResponse::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:DownloadStashResponse.value)
}
inline ::std::string* DownloadStashResponse::add_value() {
  // @@protoc_insertion_point(field_add_mutable:DownloadStashResponse.value)
  return value_.Add();
}
inline void DownloadStashResponse::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:DownloadStashResponse.value)
}
#if LANG_CXX11
inline void DownloadStashResponse::add_value(::std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:DownloadStashResponse.value)
}
#endif
inline void DownloadStashResponse::add_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:DownloadStashResponse.value)
}
inline void DownloadStashResponse::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:DownloadStashResponse.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DownloadStashResponse::value() const {
  // @@protoc_insertion_point(field_list:DownloadStashResponse.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DownloadStashResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:DownloadStashResponse.value)
  return &value_;
}

// -------------------------------------------------------------------

// UploadStashMessage

// int32 userID = 1;
inline void UploadStashMessage::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 UploadStashMessage::userid() const {
  // @@protoc_insertion_point(field_get:UploadStashMessage.userID)
  return userid_;
}
inline void UploadStashMessage::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:UploadStashMessage.userID)
}

// repeated int32 pos = 2;
inline int UploadStashMessage::pos_size() const {
  return pos_.size();
}
inline void UploadStashMessage::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::int32 UploadStashMessage::pos(int index) const {
  // @@protoc_insertion_point(field_get:UploadStashMessage.pos)
  return pos_.Get(index);
}
inline void UploadStashMessage::set_pos(int index, ::google::protobuf::int32 value) {
  pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:UploadStashMessage.pos)
}
inline void UploadStashMessage::add_pos(::google::protobuf::int32 value) {
  pos_.Add(value);
  // @@protoc_insertion_point(field_add:UploadStashMessage.pos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UploadStashMessage::pos() const {
  // @@protoc_insertion_point(field_list:UploadStashMessage.pos)
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UploadStashMessage::mutable_pos() {
  // @@protoc_insertion_point(field_mutable_list:UploadStashMessage.pos)
  return &pos_;
}

// repeated bytes value = 3;
inline int UploadStashMessage::value_size() const {
  return value_.size();
}
inline void UploadStashMessage::clear_value() {
  value_.Clear();
}
inline const ::std::string& UploadStashMessage::value(int index) const {
  // @@protoc_insertion_point(field_get:UploadStashMessage.value)
  return value_.Get(index);
}
inline ::std::string* UploadStashMessage::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:UploadStashMessage.value)
  return value_.Mutable(index);
}
inline void UploadStashMessage::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:UploadStashMessage.value)
  value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void UploadStashMessage::set_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:UploadStashMessage.value)
  value_.Mutable(index)->assign(std::move(value));
}
#endif
inline void UploadStashMessage::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:UploadStashMessage.value)
}
inline void UploadStashMessage::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:UploadStashMessage.value)
}
inline ::std::string* UploadStashMessage::add_value() {
  // @@protoc_insertion_point(field_add_mutable:UploadStashMessage.value)
  return value_.Add();
}
inline void UploadStashMessage::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:UploadStashMessage.value)
}
#if LANG_CXX11
inline void UploadStashMessage::add_value(::std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:UploadStashMessage.value)
}
#endif
inline void UploadStashMessage::add_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:UploadStashMessage.value)
}
inline void UploadStashMessage::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:UploadStashMessage.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UploadStashMessage::value() const {
  // @@protoc_insertion_point(field_list:UploadStashMessage.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UploadStashMessage::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:UploadStashMessage.value)
  return &value_;
}

// -------------------------------------------------------------------

// SetupMessage

// int32 maxQueueSize = 1;
inline void SetupMessage::clear_maxqueuesize() {
  maxqueuesize_ = 0;
}
inline ::google::protobuf::int32 SetupMessage::maxqueuesize() const {
  // @@protoc_insertion_point(field_get:SetupMessage.maxQueueSize)
  return maxqueuesize_;
}
inline void SetupMessage::set_maxqueuesize(::google::protobuf::int32 value) {
  
  maxqueuesize_ = value;
  // @@protoc_insertion_point(field_set:SetupMessage.maxQueueSize)
}

// -------------------------------------------------------------------

// CreateOMAPMessage

// int32 num = 1;
inline void CreateOMAPMessage::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 CreateOMAPMessage::num() const {
  // @@protoc_insertion_point(field_get:CreateOMAPMessage.num)
  return num_;
}
inline void CreateOMAPMessage::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:CreateOMAPMessage.num)
}

// int32 userID = 2;
inline void CreateOMAPMessage::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 CreateOMAPMessage::userid() const {
  // @@protoc_insertion_point(field_get:CreateOMAPMessage.userID)
  return userid_;
}
inline void CreateOMAPMessage::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:CreateOMAPMessage.userID)
}

// -------------------------------------------------------------------

// ReadStoreRequest

// repeated int32 poses = 1;
inline int ReadStoreRequest::poses_size() const {
  return poses_.size();
}
inline void ReadStoreRequest::clear_poses() {
  poses_.Clear();
}
inline ::google::protobuf::int32 ReadStoreRequest::poses(int index) const {
  // @@protoc_insertion_point(field_get:ReadStoreRequest.poses)
  return poses_.Get(index);
}
inline void ReadStoreRequest::set_poses(int index, ::google::protobuf::int32 value) {
  poses_.Set(index, value);
  // @@protoc_insertion_point(field_set:ReadStoreRequest.poses)
}
inline void ReadStoreRequest::add_poses(::google::protobuf::int32 value) {
  poses_.Add(value);
  // @@protoc_insertion_point(field_add:ReadStoreRequest.poses)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReadStoreRequest::poses() const {
  // @@protoc_insertion_point(field_list:ReadStoreRequest.poses)
  return poses_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReadStoreRequest::mutable_poses() {
  // @@protoc_insertion_point(field_mutable_list:ReadStoreRequest.poses)
  return &poses_;
}

// int32 userID = 2;
inline void ReadStoreRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 ReadStoreRequest::userid() const {
  // @@protoc_insertion_point(field_get:ReadStoreRequest.userID)
  return userid_;
}
inline void ReadStoreRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ReadStoreRequest.userID)
}

// -------------------------------------------------------------------

// WriteStoreRequest

// repeated int32 pos = 1;
inline int WriteStoreRequest::pos_size() const {
  return pos_.size();
}
inline void WriteStoreRequest::clear_pos() {
  pos_.Clear();
}
inline ::google::protobuf::int32 WriteStoreRequest::pos(int index) const {
  // @@protoc_insertion_point(field_get:WriteStoreRequest.pos)
  return pos_.Get(index);
}
inline void WriteStoreRequest::set_pos(int index, ::google::protobuf::int32 value) {
  pos_.Set(index, value);
  // @@protoc_insertion_point(field_set:WriteStoreRequest.pos)
}
inline void WriteStoreRequest::add_pos(::google::protobuf::int32 value) {
  pos_.Add(value);
  // @@protoc_insertion_point(field_add:WriteStoreRequest.pos)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WriteStoreRequest::pos() const {
  // @@protoc_insertion_point(field_list:WriteStoreRequest.pos)
  return pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WriteStoreRequest::mutable_pos() {
  // @@protoc_insertion_point(field_mutable_list:WriteStoreRequest.pos)
  return &pos_;
}

// int32 userID = 2;
inline void WriteStoreRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 WriteStoreRequest::userid() const {
  // @@protoc_insertion_point(field_get:WriteStoreRequest.userID)
  return userid_;
}
inline void WriteStoreRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:WriteStoreRequest.userID)
}

// repeated bytes value = 3;
inline int WriteStoreRequest::value_size() const {
  return value_.size();
}
inline void WriteStoreRequest::clear_value() {
  value_.Clear();
}
inline const ::std::string& WriteStoreRequest::value(int index) const {
  // @@protoc_insertion_point(field_get:WriteStoreRequest.value)
  return value_.Get(index);
}
inline ::std::string* WriteStoreRequest::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:WriteStoreRequest.value)
  return value_.Mutable(index);
}
inline void WriteStoreRequest::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:WriteStoreRequest.value)
  value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void WriteStoreRequest::set_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:WriteStoreRequest.value)
  value_.Mutable(index)->assign(std::move(value));
}
#endif
inline void WriteStoreRequest::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:WriteStoreRequest.value)
}
inline void WriteStoreRequest::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:WriteStoreRequest.value)
}
inline ::std::string* WriteStoreRequest::add_value() {
  // @@protoc_insertion_point(field_add_mutable:WriteStoreRequest.value)
  return value_.Add();
}
inline void WriteStoreRequest::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:WriteStoreRequest.value)
}
#if LANG_CXX11
inline void WriteStoreRequest::add_value(::std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:WriteStoreRequest.value)
}
#endif
inline void WriteStoreRequest::add_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:WriteStoreRequest.value)
}
inline void WriteStoreRequest::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:WriteStoreRequest.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
WriteStoreRequest::value() const {
  // @@protoc_insertion_point(field_list:WriteStoreRequest.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
WriteStoreRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:WriteStoreRequest.value)
  return &value_;
}

// repeated int32 size = 4;
inline int WriteStoreRequest::size_size() const {
  return size_.size();
}
inline void WriteStoreRequest::clear_size() {
  size_.Clear();
}
inline ::google::protobuf::int32 WriteStoreRequest::size(int index) const {
  // @@protoc_insertion_point(field_get:WriteStoreRequest.size)
  return size_.Get(index);
}
inline void WriteStoreRequest::set_size(int index, ::google::protobuf::int32 value) {
  size_.Set(index, value);
  // @@protoc_insertion_point(field_set:WriteStoreRequest.size)
}
inline void WriteStoreRequest::add_size(::google::protobuf::int32 value) {
  size_.Add(value);
  // @@protoc_insertion_point(field_add:WriteStoreRequest.size)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
WriteStoreRequest::size() const {
  // @@protoc_insertion_point(field_list:WriteStoreRequest.size)
  return size_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
WriteStoreRequest::mutable_size() {
  // @@protoc_insertion_point(field_mutable_list:WriteStoreRequest.size)
  return &size_;
}

// -------------------------------------------------------------------

// UpdateMessage

// bytes address = 1;
inline void UpdateMessage::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateMessage::address() const {
  // @@protoc_insertion_point(field_get:UpdateMessage.address)
  return address_.GetNoArena();
}
inline void UpdateMessage::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateMessage.address)
}
#if LANG_CXX11
inline void UpdateMessage::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateMessage.address)
}
#endif
inline void UpdateMessage::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateMessage.address)
}
inline void UpdateMessage::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateMessage.address)
}
inline ::std::string* UpdateMessage::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:UpdateMessage.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateMessage::release_address() {
  // @@protoc_insertion_point(field_release:UpdateMessage.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateMessage::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:UpdateMessage.address)
}

// bytes value = 2;
inline void UpdateMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateMessage::value() const {
  // @@protoc_insertion_point(field_get:UpdateMessage.value)
  return value_.GetNoArena();
}
inline void UpdateMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateMessage.value)
}
#if LANG_CXX11
inline void UpdateMessage::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateMessage.value)
}
#endif
inline void UpdateMessage::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateMessage.value)
}
inline void UpdateMessage::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateMessage.value)
}
inline ::std::string* UpdateMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:UpdateMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateMessage::release_value() {
  // @@protoc_insertion_point(field_release:UpdateMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:UpdateMessage.value)
}

// -------------------------------------------------------------------

// SearchMessage

// repeated bytes address = 1;
inline int SearchMessage::address_size() const {
  return address_.size();
}
inline void SearchMessage::clear_address() {
  address_.Clear();
}
inline const ::std::string& SearchMessage::address(int index) const {
  // @@protoc_insertion_point(field_get:SearchMessage.address)
  return address_.Get(index);
}
inline ::std::string* SearchMessage::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:SearchMessage.address)
  return address_.Mutable(index);
}
inline void SearchMessage::set_address(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SearchMessage.address)
  address_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchMessage::set_address(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:SearchMessage.address)
  address_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchMessage::set_address(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  address_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SearchMessage.address)
}
inline void SearchMessage::set_address(int index, const void* value, size_t size) {
  address_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SearchMessage.address)
}
inline ::std::string* SearchMessage::add_address() {
  // @@protoc_insertion_point(field_add_mutable:SearchMessage.address)
  return address_.Add();
}
inline void SearchMessage::add_address(const ::std::string& value) {
  address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SearchMessage.address)
}
#if LANG_CXX11
inline void SearchMessage::add_address(::std::string&& value) {
  address_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SearchMessage.address)
}
#endif
inline void SearchMessage::add_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SearchMessage.address)
}
inline void SearchMessage::add_address(const void* value, size_t size) {
  address_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SearchMessage.address)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchMessage::address() const {
  // @@protoc_insertion_point(field_list:SearchMessage.address)
  return address_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchMessage::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:SearchMessage.address)
  return &address_;
}

// -------------------------------------------------------------------

// SearchResponse

// repeated bytes ciphertext = 1;
inline int SearchResponse::ciphertext_size() const {
  return ciphertext_.size();
}
inline void SearchResponse::clear_ciphertext() {
  ciphertext_.Clear();
}
inline const ::std::string& SearchResponse::ciphertext(int index) const {
  // @@protoc_insertion_point(field_get:SearchResponse.ciphertext)
  return ciphertext_.Get(index);
}
inline ::std::string* SearchResponse::mutable_ciphertext(int index) {
  // @@protoc_insertion_point(field_mutable:SearchResponse.ciphertext)
  return ciphertext_.Mutable(index);
}
inline void SearchResponse::set_ciphertext(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SearchResponse.ciphertext)
  ciphertext_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchResponse::set_ciphertext(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:SearchResponse.ciphertext)
  ciphertext_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchResponse::set_ciphertext(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ciphertext_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SearchResponse.ciphertext)
}
inline void SearchResponse::set_ciphertext(int index, const void* value, size_t size) {
  ciphertext_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SearchResponse.ciphertext)
}
inline ::std::string* SearchResponse::add_ciphertext() {
  // @@protoc_insertion_point(field_add_mutable:SearchResponse.ciphertext)
  return ciphertext_.Add();
}
inline void SearchResponse::add_ciphertext(const ::std::string& value) {
  ciphertext_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SearchResponse.ciphertext)
}
#if LANG_CXX11
inline void SearchResponse::add_ciphertext(::std::string&& value) {
  ciphertext_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SearchResponse.ciphertext)
}
#endif
inline void SearchResponse::add_ciphertext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ciphertext_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SearchResponse.ciphertext)
}
inline void SearchResponse::add_ciphertext(const void* value, size_t size) {
  ciphertext_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SearchResponse.ciphertext)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchResponse::ciphertext() const {
  // @@protoc_insertion_point(field_list:SearchResponse.ciphertext)
  return ciphertext_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchResponse::mutable_ciphertext() {
  // @@protoc_insertion_point(field_mutable_list:SearchResponse.ciphertext)
  return &ciphertext_;
}

// repeated int32 cipherSize = 2;
inline int SearchResponse::ciphersize_size() const {
  return ciphersize_.size();
}
inline void SearchResponse::clear_ciphersize() {
  ciphersize_.Clear();
}
inline ::google::protobuf::int32 SearchResponse::ciphersize(int index) const {
  // @@protoc_insertion_point(field_get:SearchResponse.cipherSize)
  return ciphersize_.Get(index);
}
inline void SearchResponse::set_ciphersize(int index, ::google::protobuf::int32 value) {
  ciphersize_.Set(index, value);
  // @@protoc_insertion_point(field_set:SearchResponse.cipherSize)
}
inline void SearchResponse::add_ciphersize(::google::protobuf::int32 value) {
  ciphersize_.Add(value);
  // @@protoc_insertion_point(field_add:SearchResponse.cipherSize)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SearchResponse::ciphersize() const {
  // @@protoc_insertion_point(field_list:SearchResponse.cipherSize)
  return ciphersize_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SearchResponse::mutable_ciphersize() {
  // @@protoc_insertion_point(field_mutable_list:SearchResponse.cipherSize)
  return &ciphersize_;
}

// repeated int32 cipherPositions = 3;
inline int SearchResponse::cipherpositions_size() const {
  return cipherpositions_.size();
}
inline void SearchResponse::clear_cipherpositions() {
  cipherpositions_.Clear();
}
inline ::google::protobuf::int32 SearchResponse::cipherpositions(int index) const {
  // @@protoc_insertion_point(field_get:SearchResponse.cipherPositions)
  return cipherpositions_.Get(index);
}
inline void SearchResponse::set_cipherpositions(int index, ::google::protobuf::int32 value) {
  cipherpositions_.Set(index, value);
  // @@protoc_insertion_point(field_set:SearchResponse.cipherPositions)
}
inline void SearchResponse::add_cipherpositions(::google::protobuf::int32 value) {
  cipherpositions_.Add(value);
  // @@protoc_insertion_point(field_add:SearchResponse.cipherPositions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SearchResponse::cipherpositions() const {
  // @@protoc_insertion_point(field_list:SearchResponse.cipherPositions)
  return cipherpositions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SearchResponse::mutable_cipherpositions() {
  // @@protoc_insertion_point(field_mutable_list:SearchResponse.cipherPositions)
  return &cipherpositions_;
}

// -------------------------------------------------------------------

// SearchMessage1

// repeated bytes address = 1;
inline int SearchMessage1::address_size() const {
  return address_.size();
}
inline void SearchMessage1::clear_address() {
  address_.Clear();
}
inline const ::std::string& SearchMessage1::address(int index) const {
  // @@protoc_insertion_point(field_get:SearchMessage1.address)
  return address_.Get(index);
}
inline ::std::string* SearchMessage1::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:SearchMessage1.address)
  return address_.Mutable(index);
}
inline void SearchMessage1::set_address(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SearchMessage1.address)
  address_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchMessage1::set_address(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:SearchMessage1.address)
  address_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchMessage1::set_address(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  address_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SearchMessage1.address)
}
inline void SearchMessage1::set_address(int index, const void* value, size_t size) {
  address_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SearchMessage1.address)
}
inline ::std::string* SearchMessage1::add_address() {
  // @@protoc_insertion_point(field_add_mutable:SearchMessage1.address)
  return address_.Add();
}
inline void SearchMessage1::add_address(const ::std::string& value) {
  address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SearchMessage1.address)
}
#if LANG_CXX11
inline void SearchMessage1::add_address(::std::string&& value) {
  address_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SearchMessage1.address)
}
#endif
inline void SearchMessage1::add_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SearchMessage1.address)
}
inline void SearchMessage1::add_address(const void* value, size_t size) {
  address_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SearchMessage1.address)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchMessage1::address() const {
  // @@protoc_insertion_point(field_list:SearchMessage1.address)
  return address_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchMessage1::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:SearchMessage1.address)
  return &address_;
}

// -------------------------------------------------------------------

// SearchResponse1

// repeated bytes ciphertext = 1;
inline int SearchResponse1::ciphertext_size() const {
  return ciphertext_.size();
}
inline void SearchResponse1::clear_ciphertext() {
  ciphertext_.Clear();
}
inline const ::std::string& SearchResponse1::ciphertext(int index) const {
  // @@protoc_insertion_point(field_get:SearchResponse1.ciphertext)
  return ciphertext_.Get(index);
}
inline ::std::string* SearchResponse1::mutable_ciphertext(int index) {
  // @@protoc_insertion_point(field_mutable:SearchResponse1.ciphertext)
  return ciphertext_.Mutable(index);
}
inline void SearchResponse1::set_ciphertext(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SearchResponse1.ciphertext)
  ciphertext_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchResponse1::set_ciphertext(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:SearchResponse1.ciphertext)
  ciphertext_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchResponse1::set_ciphertext(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ciphertext_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SearchResponse1.ciphertext)
}
inline void SearchResponse1::set_ciphertext(int index, const void* value, size_t size) {
  ciphertext_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SearchResponse1.ciphertext)
}
inline ::std::string* SearchResponse1::add_ciphertext() {
  // @@protoc_insertion_point(field_add_mutable:SearchResponse1.ciphertext)
  return ciphertext_.Add();
}
inline void SearchResponse1::add_ciphertext(const ::std::string& value) {
  ciphertext_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SearchResponse1.ciphertext)
}
#if LANG_CXX11
inline void SearchResponse1::add_ciphertext(::std::string&& value) {
  ciphertext_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SearchResponse1.ciphertext)
}
#endif
inline void SearchResponse1::add_ciphertext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ciphertext_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SearchResponse1.ciphertext)
}
inline void SearchResponse1::add_ciphertext(const void* value, size_t size) {
  ciphertext_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SearchResponse1.ciphertext)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchResponse1::ciphertext() const {
  // @@protoc_insertion_point(field_list:SearchResponse1.ciphertext)
  return ciphertext_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchResponse1::mutable_ciphertext() {
  // @@protoc_insertion_point(field_mutable_list:SearchResponse1.ciphertext)
  return &ciphertext_;
}

// repeated int32 cipherPositions = 2;
inline int SearchResponse1::cipherpositions_size() const {
  return cipherpositions_.size();
}
inline void SearchResponse1::clear_cipherpositions() {
  cipherpositions_.Clear();
}
inline ::google::protobuf::int32 SearchResponse1::cipherpositions(int index) const {
  // @@protoc_insertion_point(field_get:SearchResponse1.cipherPositions)
  return cipherpositions_.Get(index);
}
inline void SearchResponse1::set_cipherpositions(int index, ::google::protobuf::int32 value) {
  cipherpositions_.Set(index, value);
  // @@protoc_insertion_point(field_set:SearchResponse1.cipherPositions)
}
inline void SearchResponse1::add_cipherpositions(::google::protobuf::int32 value) {
  cipherpositions_.Add(value);
  // @@protoc_insertion_point(field_add:SearchResponse1.cipherPositions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SearchResponse1::cipherpositions() const {
  // @@protoc_insertion_point(field_list:SearchResponse1.cipherPositions)
  return cipherpositions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SearchResponse1::mutable_cipherpositions() {
  // @@protoc_insertion_point(field_mutable_list:SearchResponse1.cipherPositions)
  return &cipherpositions_;
}

// -------------------------------------------------------------------

// BatchUpdateMessage

// repeated bytes address = 1;
inline int BatchUpdateMessage::address_size() const {
  return address_.size();
}
inline void BatchUpdateMessage::clear_address() {
  address_.Clear();
}
inline const ::std::string& BatchUpdateMessage::address(int index) const {
  // @@protoc_insertion_point(field_get:BatchUpdateMessage.address)
  return address_.Get(index);
}
inline ::std::string* BatchUpdateMessage::mutable_address(int index) {
  // @@protoc_insertion_point(field_mutable:BatchUpdateMessage.address)
  return address_.Mutable(index);
}
inline void BatchUpdateMessage::set_address(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BatchUpdateMessage.address)
  address_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchUpdateMessage::set_address(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:BatchUpdateMessage.address)
  address_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchUpdateMessage::set_address(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  address_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BatchUpdateMessage.address)
}
inline void BatchUpdateMessage::set_address(int index, const void* value, size_t size) {
  address_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BatchUpdateMessage.address)
}
inline ::std::string* BatchUpdateMessage::add_address() {
  // @@protoc_insertion_point(field_add_mutable:BatchUpdateMessage.address)
  return address_.Add();
}
inline void BatchUpdateMessage::add_address(const ::std::string& value) {
  address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BatchUpdateMessage.address)
}
#if LANG_CXX11
inline void BatchUpdateMessage::add_address(::std::string&& value) {
  address_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:BatchUpdateMessage.address)
}
#endif
inline void BatchUpdateMessage::add_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  address_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BatchUpdateMessage.address)
}
inline void BatchUpdateMessage::add_address(const void* value, size_t size) {
  address_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BatchUpdateMessage.address)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BatchUpdateMessage::address() const {
  // @@protoc_insertion_point(field_list:BatchUpdateMessage.address)
  return address_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BatchUpdateMessage::mutable_address() {
  // @@protoc_insertion_point(field_mutable_list:BatchUpdateMessage.address)
  return &address_;
}

// repeated bytes value = 2;
inline int BatchUpdateMessage::value_size() const {
  return value_.size();
}
inline void BatchUpdateMessage::clear_value() {
  value_.Clear();
}
inline const ::std::string& BatchUpdateMessage::value(int index) const {
  // @@protoc_insertion_point(field_get:BatchUpdateMessage.value)
  return value_.Get(index);
}
inline ::std::string* BatchUpdateMessage::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:BatchUpdateMessage.value)
  return value_.Mutable(index);
}
inline void BatchUpdateMessage::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BatchUpdateMessage.value)
  value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchUpdateMessage::set_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:BatchUpdateMessage.value)
  value_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchUpdateMessage::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BatchUpdateMessage.value)
}
inline void BatchUpdateMessage::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BatchUpdateMessage.value)
}
inline ::std::string* BatchUpdateMessage::add_value() {
  // @@protoc_insertion_point(field_add_mutable:BatchUpdateMessage.value)
  return value_.Add();
}
inline void BatchUpdateMessage::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BatchUpdateMessage.value)
}
#if LANG_CXX11
inline void BatchUpdateMessage::add_value(::std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:BatchUpdateMessage.value)
}
#endif
inline void BatchUpdateMessage::add_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BatchUpdateMessage.value)
}
inline void BatchUpdateMessage::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BatchUpdateMessage.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BatchUpdateMessage::value() const {
  // @@protoc_insertion_point(field_list:BatchUpdateMessage.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BatchUpdateMessage::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:BatchUpdateMessage.value)
  return &value_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_musse_2eproto__INCLUDED
