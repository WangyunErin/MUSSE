// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mkse.proto

#ifndef PROTOBUF_mkse_2eproto__INCLUDED
#define PROTOBUF_mkse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_mkse_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSetupMessageImpl();
void InitDefaultsSetupMessage();
void InitDefaultsgetRofFileRequestImpl();
void InitDefaultsgetRofFileRequest();
void InitDefaultsgetRofFileResponseImpl();
void InitDefaultsgetRofFileResponse();
void InitDefaultsUpdateMessageImpl();
void InitDefaultsUpdateMessage();
void InitDefaultsSearchMessageImpl();
void InitDefaultsSearchMessage();
void InitDefaultsSearchResponseImpl();
void InitDefaultsSearchResponse();
void InitDefaultsBatchUpdateMessageImpl();
void InitDefaultsBatchUpdateMessage();
inline void InitDefaults() {
  InitDefaultsSetupMessage();
  InitDefaultsgetRofFileRequest();
  InitDefaultsgetRofFileResponse();
  InitDefaultsUpdateMessage();
  InitDefaultsSearchMessage();
  InitDefaultsSearchResponse();
  InitDefaultsBatchUpdateMessage();
}
}  // namespace protobuf_mkse_2eproto
class BatchUpdateMessage;
class BatchUpdateMessageDefaultTypeInternal;
extern BatchUpdateMessageDefaultTypeInternal _BatchUpdateMessage_default_instance_;
class SearchMessage;
class SearchMessageDefaultTypeInternal;
extern SearchMessageDefaultTypeInternal _SearchMessage_default_instance_;
class SearchResponse;
class SearchResponseDefaultTypeInternal;
extern SearchResponseDefaultTypeInternal _SearchResponse_default_instance_;
class SetupMessage;
class SetupMessageDefaultTypeInternal;
extern SetupMessageDefaultTypeInternal _SetupMessage_default_instance_;
class UpdateMessage;
class UpdateMessageDefaultTypeInternal;
extern UpdateMessageDefaultTypeInternal _UpdateMessage_default_instance_;
class getRofFileRequest;
class getRofFileRequestDefaultTypeInternal;
extern getRofFileRequestDefaultTypeInternal _getRofFileRequest_default_instance_;
class getRofFileResponse;
class getRofFileResponseDefaultTypeInternal;
extern getRofFileResponseDefaultTypeInternal _getRofFileResponse_default_instance_;

// ===================================================================

class SetupMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetupMessage) */ {
 public:
  SetupMessage();
  virtual ~SetupMessage();

  SetupMessage(const SetupMessage& from);

  inline SetupMessage& operator=(const SetupMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetupMessage(SetupMessage&& from) noexcept
    : SetupMessage() {
    *this = ::std::move(from);
  }

  inline SetupMessage& operator=(SetupMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetupMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetupMessage* internal_default_instance() {
    return reinterpret_cast<const SetupMessage*>(
               &_SetupMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SetupMessage* other);
  friend void swap(SetupMessage& a, SetupMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetupMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SetupMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetupMessage& from);
  void MergeFrom(const SetupMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetupMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 maxQueueSize = 1;
  void clear_maxqueuesize();
  static const int kMaxQueueSizeFieldNumber = 1;
  ::google::protobuf::int32 maxqueuesize() const;
  void set_maxqueuesize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetupMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 maxqueuesize_;
  mutable int _cached_size_;
  friend struct ::protobuf_mkse_2eproto::TableStruct;
  friend void ::protobuf_mkse_2eproto::InitDefaultsSetupMessageImpl();
};
// -------------------------------------------------------------------

class getRofFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:getRofFileRequest) */ {
 public:
  getRofFileRequest();
  virtual ~getRofFileRequest();

  getRofFileRequest(const getRofFileRequest& from);

  inline getRofFileRequest& operator=(const getRofFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  getRofFileRequest(getRofFileRequest&& from) noexcept
    : getRofFileRequest() {
    *this = ::std::move(from);
  }

  inline getRofFileRequest& operator=(getRofFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const getRofFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const getRofFileRequest* internal_default_instance() {
    return reinterpret_cast<const getRofFileRequest*>(
               &_getRofFileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(getRofFileRequest* other);
  friend void swap(getRofFileRequest& a, getRofFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline getRofFileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  getRofFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const getRofFileRequest& from);
  void MergeFrom(const getRofFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(getRofFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ind = 1;
  void clear_ind();
  static const int kIndFieldNumber = 1;
  ::google::protobuf::int32 ind() const;
  void set_ind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:getRofFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ind_;
  mutable int _cached_size_;
  friend struct ::protobuf_mkse_2eproto::TableStruct;
  friend void ::protobuf_mkse_2eproto::InitDefaultsgetRofFileRequestImpl();
};
// -------------------------------------------------------------------

class getRofFileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:getRofFileResponse) */ {
 public:
  getRofFileResponse();
  virtual ~getRofFileResponse();

  getRofFileResponse(const getRofFileResponse& from);

  inline getRofFileResponse& operator=(const getRofFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  getRofFileResponse(getRofFileResponse&& from) noexcept
    : getRofFileResponse() {
    *this = ::std::move(from);
  }

  inline getRofFileResponse& operator=(getRofFileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const getRofFileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const getRofFileResponse* internal_default_instance() {
    return reinterpret_cast<const getRofFileResponse*>(
               &_getRofFileResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(getRofFileResponse* other);
  friend void swap(getRofFileResponse& a, getRofFileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline getRofFileResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  getRofFileResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const getRofFileResponse& from);
  void MergeFrom(const getRofFileResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(getRofFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 r = 1;
  void clear_r();
  static const int kRFieldNumber = 1;
  ::google::protobuf::int32 r() const;
  void set_r(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:getRofFileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 r_;
  mutable int _cached_size_;
  friend struct ::protobuf_mkse_2eproto::TableStruct;
  friend void ::protobuf_mkse_2eproto::InitDefaultsgetRofFileResponseImpl();
};
// -------------------------------------------------------------------

class UpdateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateMessage) */ {
 public:
  UpdateMessage();
  virtual ~UpdateMessage();

  UpdateMessage(const UpdateMessage& from);

  inline UpdateMessage& operator=(const UpdateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateMessage(UpdateMessage&& from) noexcept
    : UpdateMessage() {
    *this = ::std::move(from);
  }

  inline UpdateMessage& operator=(UpdateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateMessage* internal_default_instance() {
    return reinterpret_cast<const UpdateMessage*>(
               &_UpdateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UpdateMessage* other);
  friend void swap(UpdateMessage& a, UpdateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateMessage& from);
  void MergeFrom(const UpdateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes dcipher = 2;
  void clear_dcipher();
  static const int kDcipherFieldNumber = 2;
  const ::std::string& dcipher() const;
  void set_dcipher(const ::std::string& value);
  #if LANG_CXX11
  void set_dcipher(::std::string&& value);
  #endif
  void set_dcipher(const char* value);
  void set_dcipher(const void* value, size_t size);
  ::std::string* mutable_dcipher();
  ::std::string* release_dcipher();
  void set_allocated_dcipher(::std::string* dcipher);

  // int32 r = 1;
  void clear_r();
  static const int kRFieldNumber = 1;
  ::google::protobuf::int32 r() const;
  void set_r(::google::protobuf::int32 value);

  // int32 ind = 3;
  void clear_ind();
  static const int kIndFieldNumber = 3;
  ::google::protobuf::int32 ind() const;
  void set_ind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:UpdateMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dcipher_;
  ::google::protobuf::int32 r_;
  ::google::protobuf::int32 ind_;
  mutable int _cached_size_;
  friend struct ::protobuf_mkse_2eproto::TableStruct;
  friend void ::protobuf_mkse_2eproto::InitDefaultsUpdateMessageImpl();
};
// -------------------------------------------------------------------

class SearchMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchMessage) */ {
 public:
  SearchMessage();
  virtual ~SearchMessage();

  SearchMessage(const SearchMessage& from);

  inline SearchMessage& operator=(const SearchMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchMessage(SearchMessage&& from) noexcept
    : SearchMessage() {
    *this = ::std::move(from);
  }

  inline SearchMessage& operator=(SearchMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchMessage* internal_default_instance() {
    return reinterpret_cast<const SearchMessage*>(
               &_SearchMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SearchMessage* other);
  friend void swap(SearchMessage& a, SearchMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchMessage& from);
  void MergeFrom(const SearchMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes q = 1;
  void clear_q();
  static const int kQFieldNumber = 1;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const void* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // @@protoc_insertion_point(class_scope:SearchMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  mutable int _cached_size_;
  friend struct ::protobuf_mkse_2eproto::TableStruct;
  friend void ::protobuf_mkse_2eproto::InitDefaultsSearchMessageImpl();
};
// -------------------------------------------------------------------

class SearchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SearchResponse) */ {
 public:
  SearchResponse();
  virtual ~SearchResponse();

  SearchResponse(const SearchResponse& from);

  inline SearchResponse& operator=(const SearchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchResponse(SearchResponse&& from) noexcept
    : SearchResponse() {
    *this = ::std::move(from);
  }

  inline SearchResponse& operator=(SearchResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SearchResponse* internal_default_instance() {
    return reinterpret_cast<const SearchResponse*>(
               &_SearchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SearchResponse* other);
  friend void swap(SearchResponse& a, SearchResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResponse& from);
  void MergeFrom(const SearchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes value = 1;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value(int index) const;
  ::std::string* mutable_value(int index);
  void set_value(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_value(int index, ::std::string&& value);
  #endif
  void set_value(int index, const char* value);
  void set_value(int index, const void* value, size_t size);
  ::std::string* add_value();
  void add_value(const ::std::string& value);
  #if LANG_CXX11
  void add_value(::std::string&& value);
  #endif
  void add_value(const char* value);
  void add_value(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& value() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_value();

  // repeated int32 id = 2;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:SearchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  mutable int _id_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_mkse_2eproto::TableStruct;
  friend void ::protobuf_mkse_2eproto::InitDefaultsSearchResponseImpl();
};
// -------------------------------------------------------------------

class BatchUpdateMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BatchUpdateMessage) */ {
 public:
  BatchUpdateMessage();
  virtual ~BatchUpdateMessage();

  BatchUpdateMessage(const BatchUpdateMessage& from);

  inline BatchUpdateMessage& operator=(const BatchUpdateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BatchUpdateMessage(BatchUpdateMessage&& from) noexcept
    : BatchUpdateMessage() {
    *this = ::std::move(from);
  }

  inline BatchUpdateMessage& operator=(BatchUpdateMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchUpdateMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchUpdateMessage* internal_default_instance() {
    return reinterpret_cast<const BatchUpdateMessage*>(
               &_BatchUpdateMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(BatchUpdateMessage* other);
  friend void swap(BatchUpdateMessage& a, BatchUpdateMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BatchUpdateMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchUpdateMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchUpdateMessage& from);
  void MergeFrom(const BatchUpdateMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchUpdateMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 r = 1;
  int r_size() const;
  void clear_r();
  static const int kRFieldNumber = 1;
  ::google::protobuf::int32 r(int index) const;
  void set_r(int index, ::google::protobuf::int32 value);
  void add_r(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      r() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_r();

  // repeated bytes dcipher = 2;
  int dcipher_size() const;
  void clear_dcipher();
  static const int kDcipherFieldNumber = 2;
  const ::std::string& dcipher(int index) const;
  ::std::string* mutable_dcipher(int index);
  void set_dcipher(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_dcipher(int index, ::std::string&& value);
  #endif
  void set_dcipher(int index, const char* value);
  void set_dcipher(int index, const void* value, size_t size);
  ::std::string* add_dcipher();
  void add_dcipher(const ::std::string& value);
  #if LANG_CXX11
  void add_dcipher(::std::string&& value);
  #endif
  void add_dcipher(const char* value);
  void add_dcipher(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dcipher() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dcipher();

  // repeated int32 ind = 3;
  int ind_size() const;
  void clear_ind();
  static const int kIndFieldNumber = 3;
  ::google::protobuf::int32 ind(int index) const;
  void set_ind(int index, ::google::protobuf::int32 value);
  void add_ind(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ind() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ind();

  // @@protoc_insertion_point(class_scope:BatchUpdateMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > r_;
  mutable int _r_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dcipher_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ind_;
  mutable int _ind_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_mkse_2eproto::TableStruct;
  friend void ::protobuf_mkse_2eproto::InitDefaultsBatchUpdateMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetupMessage

// int32 maxQueueSize = 1;
inline void SetupMessage::clear_maxqueuesize() {
  maxqueuesize_ = 0;
}
inline ::google::protobuf::int32 SetupMessage::maxqueuesize() const {
  // @@protoc_insertion_point(field_get:SetupMessage.maxQueueSize)
  return maxqueuesize_;
}
inline void SetupMessage::set_maxqueuesize(::google::protobuf::int32 value) {
  
  maxqueuesize_ = value;
  // @@protoc_insertion_point(field_set:SetupMessage.maxQueueSize)
}

// -------------------------------------------------------------------

// getRofFileRequest

// int32 ind = 1;
inline void getRofFileRequest::clear_ind() {
  ind_ = 0;
}
inline ::google::protobuf::int32 getRofFileRequest::ind() const {
  // @@protoc_insertion_point(field_get:getRofFileRequest.ind)
  return ind_;
}
inline void getRofFileRequest::set_ind(::google::protobuf::int32 value) {
  
  ind_ = value;
  // @@protoc_insertion_point(field_set:getRofFileRequest.ind)
}

// -------------------------------------------------------------------

// getRofFileResponse

// int32 r = 1;
inline void getRofFileResponse::clear_r() {
  r_ = 0;
}
inline ::google::protobuf::int32 getRofFileResponse::r() const {
  // @@protoc_insertion_point(field_get:getRofFileResponse.r)
  return r_;
}
inline void getRofFileResponse::set_r(::google::protobuf::int32 value) {
  
  r_ = value;
  // @@protoc_insertion_point(field_set:getRofFileResponse.r)
}

// -------------------------------------------------------------------

// UpdateMessage

// int32 r = 1;
inline void UpdateMessage::clear_r() {
  r_ = 0;
}
inline ::google::protobuf::int32 UpdateMessage::r() const {
  // @@protoc_insertion_point(field_get:UpdateMessage.r)
  return r_;
}
inline void UpdateMessage::set_r(::google::protobuf::int32 value) {
  
  r_ = value;
  // @@protoc_insertion_point(field_set:UpdateMessage.r)
}

// bytes dcipher = 2;
inline void UpdateMessage::clear_dcipher() {
  dcipher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateMessage::dcipher() const {
  // @@protoc_insertion_point(field_get:UpdateMessage.dcipher)
  return dcipher_.GetNoArena();
}
inline void UpdateMessage::set_dcipher(const ::std::string& value) {
  
  dcipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UpdateMessage.dcipher)
}
#if LANG_CXX11
inline void UpdateMessage::set_dcipher(::std::string&& value) {
  
  dcipher_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UpdateMessage.dcipher)
}
#endif
inline void UpdateMessage::set_dcipher(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dcipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UpdateMessage.dcipher)
}
inline void UpdateMessage::set_dcipher(const void* value, size_t size) {
  
  dcipher_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UpdateMessage.dcipher)
}
inline ::std::string* UpdateMessage::mutable_dcipher() {
  
  // @@protoc_insertion_point(field_mutable:UpdateMessage.dcipher)
  return dcipher_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateMessage::release_dcipher() {
  // @@protoc_insertion_point(field_release:UpdateMessage.dcipher)
  
  return dcipher_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateMessage::set_allocated_dcipher(::std::string* dcipher) {
  if (dcipher != NULL) {
    
  } else {
    
  }
  dcipher_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dcipher);
  // @@protoc_insertion_point(field_set_allocated:UpdateMessage.dcipher)
}

// int32 ind = 3;
inline void UpdateMessage::clear_ind() {
  ind_ = 0;
}
inline ::google::protobuf::int32 UpdateMessage::ind() const {
  // @@protoc_insertion_point(field_get:UpdateMessage.ind)
  return ind_;
}
inline void UpdateMessage::set_ind(::google::protobuf::int32 value) {
  
  ind_ = value;
  // @@protoc_insertion_point(field_set:UpdateMessage.ind)
}

// -------------------------------------------------------------------

// SearchMessage

// bytes q = 1;
inline void SearchMessage::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchMessage::q() const {
  // @@protoc_insertion_point(field_get:SearchMessage.q)
  return q_.GetNoArena();
}
inline void SearchMessage::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SearchMessage.q)
}
#if LANG_CXX11
inline void SearchMessage::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SearchMessage.q)
}
#endif
inline void SearchMessage::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SearchMessage.q)
}
inline void SearchMessage::set_q(const void* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SearchMessage.q)
}
inline ::std::string* SearchMessage::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:SearchMessage.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchMessage::release_q() {
  // @@protoc_insertion_point(field_release:SearchMessage.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchMessage::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:SearchMessage.q)
}

// -------------------------------------------------------------------

// SearchResponse

// repeated bytes value = 1;
inline int SearchResponse::value_size() const {
  return value_.size();
}
inline void SearchResponse::clear_value() {
  value_.Clear();
}
inline const ::std::string& SearchResponse::value(int index) const {
  // @@protoc_insertion_point(field_get:SearchResponse.value)
  return value_.Get(index);
}
inline ::std::string* SearchResponse::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:SearchResponse.value)
  return value_.Mutable(index);
}
inline void SearchResponse::set_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:SearchResponse.value)
  value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SearchResponse::set_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:SearchResponse.value)
  value_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SearchResponse::set_value(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SearchResponse.value)
}
inline void SearchResponse::set_value(int index, const void* value, size_t size) {
  value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SearchResponse.value)
}
inline ::std::string* SearchResponse::add_value() {
  // @@protoc_insertion_point(field_add_mutable:SearchResponse.value)
  return value_.Add();
}
inline void SearchResponse::add_value(const ::std::string& value) {
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SearchResponse.value)
}
#if LANG_CXX11
inline void SearchResponse::add_value(::std::string&& value) {
  value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SearchResponse.value)
}
#endif
inline void SearchResponse::add_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SearchResponse.value)
}
inline void SearchResponse::add_value(const void* value, size_t size) {
  value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SearchResponse.value)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchResponse::value() const {
  // @@protoc_insertion_point(field_list:SearchResponse.value)
  return value_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchResponse::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:SearchResponse.value)
  return &value_;
}

// repeated int32 id = 2;
inline int SearchResponse::id_size() const {
  return id_.size();
}
inline void SearchResponse::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 SearchResponse::id(int index) const {
  // @@protoc_insertion_point(field_get:SearchResponse.id)
  return id_.Get(index);
}
inline void SearchResponse::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:SearchResponse.id)
}
inline void SearchResponse::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:SearchResponse.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SearchResponse::id() const {
  // @@protoc_insertion_point(field_list:SearchResponse.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SearchResponse::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:SearchResponse.id)
  return &id_;
}

// -------------------------------------------------------------------

// BatchUpdateMessage

// repeated int32 r = 1;
inline int BatchUpdateMessage::r_size() const {
  return r_.size();
}
inline void BatchUpdateMessage::clear_r() {
  r_.Clear();
}
inline ::google::protobuf::int32 BatchUpdateMessage::r(int index) const {
  // @@protoc_insertion_point(field_get:BatchUpdateMessage.r)
  return r_.Get(index);
}
inline void BatchUpdateMessage::set_r(int index, ::google::protobuf::int32 value) {
  r_.Set(index, value);
  // @@protoc_insertion_point(field_set:BatchUpdateMessage.r)
}
inline void BatchUpdateMessage::add_r(::google::protobuf::int32 value) {
  r_.Add(value);
  // @@protoc_insertion_point(field_add:BatchUpdateMessage.r)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BatchUpdateMessage::r() const {
  // @@protoc_insertion_point(field_list:BatchUpdateMessage.r)
  return r_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BatchUpdateMessage::mutable_r() {
  // @@protoc_insertion_point(field_mutable_list:BatchUpdateMessage.r)
  return &r_;
}

// repeated bytes dcipher = 2;
inline int BatchUpdateMessage::dcipher_size() const {
  return dcipher_.size();
}
inline void BatchUpdateMessage::clear_dcipher() {
  dcipher_.Clear();
}
inline const ::std::string& BatchUpdateMessage::dcipher(int index) const {
  // @@protoc_insertion_point(field_get:BatchUpdateMessage.dcipher)
  return dcipher_.Get(index);
}
inline ::std::string* BatchUpdateMessage::mutable_dcipher(int index) {
  // @@protoc_insertion_point(field_mutable:BatchUpdateMessage.dcipher)
  return dcipher_.Mutable(index);
}
inline void BatchUpdateMessage::set_dcipher(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:BatchUpdateMessage.dcipher)
  dcipher_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchUpdateMessage::set_dcipher(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:BatchUpdateMessage.dcipher)
  dcipher_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchUpdateMessage::set_dcipher(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dcipher_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:BatchUpdateMessage.dcipher)
}
inline void BatchUpdateMessage::set_dcipher(int index, const void* value, size_t size) {
  dcipher_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:BatchUpdateMessage.dcipher)
}
inline ::std::string* BatchUpdateMessage::add_dcipher() {
  // @@protoc_insertion_point(field_add_mutable:BatchUpdateMessage.dcipher)
  return dcipher_.Add();
}
inline void BatchUpdateMessage::add_dcipher(const ::std::string& value) {
  dcipher_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:BatchUpdateMessage.dcipher)
}
#if LANG_CXX11
inline void BatchUpdateMessage::add_dcipher(::std::string&& value) {
  dcipher_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:BatchUpdateMessage.dcipher)
}
#endif
inline void BatchUpdateMessage::add_dcipher(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dcipher_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:BatchUpdateMessage.dcipher)
}
inline void BatchUpdateMessage::add_dcipher(const void* value, size_t size) {
  dcipher_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:BatchUpdateMessage.dcipher)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BatchUpdateMessage::dcipher() const {
  // @@protoc_insertion_point(field_list:BatchUpdateMessage.dcipher)
  return dcipher_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BatchUpdateMessage::mutable_dcipher() {
  // @@protoc_insertion_point(field_mutable_list:BatchUpdateMessage.dcipher)
  return &dcipher_;
}

// repeated int32 ind = 3;
inline int BatchUpdateMessage::ind_size() const {
  return ind_.size();
}
inline void BatchUpdateMessage::clear_ind() {
  ind_.Clear();
}
inline ::google::protobuf::int32 BatchUpdateMessage::ind(int index) const {
  // @@protoc_insertion_point(field_get:BatchUpdateMessage.ind)
  return ind_.Get(index);
}
inline void BatchUpdateMessage::set_ind(int index, ::google::protobuf::int32 value) {
  ind_.Set(index, value);
  // @@protoc_insertion_point(field_set:BatchUpdateMessage.ind)
}
inline void BatchUpdateMessage::add_ind(::google::protobuf::int32 value) {
  ind_.Add(value);
  // @@protoc_insertion_point(field_add:BatchUpdateMessage.ind)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BatchUpdateMessage::ind() const {
  // @@protoc_insertion_point(field_list:BatchUpdateMessage.ind)
  return ind_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BatchUpdateMessage::mutable_ind() {
  // @@protoc_insertion_point(field_mutable_list:BatchUpdateMessage.ind)
  return &ind_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mkse_2eproto__INCLUDED
